version: "2"
services:

# ======================================================================================================================
  frontend:
    container_name: frontend
    image: absortium/base-frontend:latest
    volumes:
      - ${DELUGE_PATH}/services/frontend/app:/opt/deluge/services/frontend/app
      - ${DELUGE_PATH}/services/frontend/internals:/opt/deluge/services/frontend/internals
      - ${DELUGE_PATH}/services/frontend/server:/opt/deluge/services/frontend/server
      - ${DELUGE_PATH}/services/frontend/package.json:/opt/deluge/services/frontend/package.json
      - ${DELUGE_PATH}/services/frontend/.gitignore:/opt/deluge/services/frontend/.gitignore
    entrypoint: ["npm"]
    command: ["run", "start"]

# ======================================================================================================================
  # Base  backend service which include the parameteres that backend and celery worker share
  backend:
    image: backend:latest
    volumes:
      - ${DELUGE_PATH}/services/backend/:/opt/deluge/services/backend/
      - ${DELUGE_PATH}/libs/:/opt/deluge/libs/
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    entrypoint: ["python", "-u", "manage.py"]
    command: ["--help"]

  # Backend DJANGO service
  m-backend:
    extends: backend
    container_name: m-backend
    environment:
      - WHOAMI=DJANGO
      - AUTH0_SECRET_KEY=${AUTH0_SECRET_KEY}
      - AUTH0_API_KEY=${AUTH0_API_KEY}
      - ETH_NOTIFICATION_TOKEN=${ETH_NOTIFICATION_TOKEN}
      - BTC_NOTIFICATION_TOKEN=${BTC_NOTIFICATION_TOKEN}
    entrypoint: ["python3", "manage.py"]
    command: ["runserver" , "0.0.0.0:3000"]

  # Celery worker
  w-backend:
    extends: backend
    container_name: w-backend
    environment:
      - COINBASE_API_KEY=${COINBASE_API_KEY}
      - COINBASE_API_SECRET=${COINBASE_API_SECRET}
      - ETHWALLET_API_KEY=${ETHWALLET_API_KEY}
      - ETHWALLET_API_SECRET=${ETHWALLET_API_SECRET}
      - WHOAMI=CELERY
    entrypoint: ["celery"]
    command: ["-A" , "absortium.celery.app", "worker", "-B", "--loglevel=info", "-c", "3"]

# ======================================================================================================================
  ethwallet:
    image: ethwallet
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - AUTH=False
    volumes:
      - ${DELUGE_PATH}/libs/:/opt/deluge/libs/
      - ${DELUGE_PATH}/services/ethwallet/:/opt/deluge/services/ethwallet/
    entrypoint: ["python3", "manage.py"]
    command: ["--help"]

  # Ethereum wallet backend DJANGO service
  m-ethwallet:
    extends: ethwallet
    container_name: m-ethwallet
    environment:
      - WHOAMI=DJANGO
    entrypoint: ["python3", "manage.py"]
    command: ["runserver", "0.0.0.0:3000"]

  # Ethereum wallet celery worker
  w-ethwallet:
    extends: ethwallet
    container_name: w-ethwallet
    environment:
      - WHOAMI=CELERY
    entrypoint: ["celery"]
    command: ["-A" , "ethwallet.celery.app", "worker", "-B", "--loglevel=info", "-c", "3"]

# ======================================================================================================================
  poloniexbot:
    image: poloniexbot
    volumes:
      - ${DELUGE_PATH}/libs/:/opt/deluge/libs/
      - ${DELUGE_PATH}/services/poloniexbot/:/opt/deluge/services/poloniexbot/
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POLONIEX_API_SECRET=${POLONIEX_API_SECRET}
      - POLONIEX_API_KEY=${POLONIEX_API_KEY}
      - ABSORTIUM_API_SECRET=${ABSORTIUM_API_SECRET}
      - ABSORTIUM_API_KEY=${ABSORTIUM_API_KEY}
      - WHOAMI=DJANGO
    entrypoint: ["python3", "manage.py"]
    command: ["sync"]

  # ======================================================================================================================
  notifier:
    extends: backend
    container_name: notifier
    links:
      - "postgres:docker.postgres"
      - "m-backend:docker.backend"

    environment:
      - WHOAMI=NOTIFIER
    entrypoint: ["python3"]
    command: ["manage.py", "mocknotifier"]

# ======================================================================================================================
  router:
    container_name: router
    image: absortium/router:latest
    volumes:
      - ${DELUGE_PATH}/services/router/.crossbar/config.json:/opt/deluge/services/router/.crossbar/config.json

# ======================================================================================================================
  ethnode:
    container_name: ethnode
    image: absortium/ethnode:latest

# ======================================================================================================================
  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - "dev_dbdata:/var/lib/postgresql/data"

# ======================================================================================================================
  redis:
    container_name: redis
    image: redis:latest

# ======================================================================================================================
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest

# ==================================================================================================================== #
#                                                    OTHER                                                             #
# ==================================================================================================================== #
  flower:
    container_name: flower
    image: worker
    build:
      context: ../..
      dockerfile: ./docker/dev/celery/Dockerfile
    links:
      - "rabbitmq:docker.celery.broker"
    ports:
      - "5555:5555"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    volumes:
      - ${DELUGE_PATH}/services/backend/src:/opt/deluge/services/backend/src
      - ${DELUGE_PATH}/services/backend/libs/core:/opt/deluge/services/backend/libs/core
    command: ["flower", "-A" , "absortium.celery.app", "--address=0.0.0.0", "--port=5555", "--broker=amqp://guest@docker.celery.broker"]

# ======================================================================================================================
  datadog:
    container_name: datadog
    image: datadog/docker-dd-agent
    environment:
     - API_KEY=${DATADOG_API_KEY}
     - DOGSTATSD_ONLY=true
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - /proc:/host/proc:ro
     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro}

volumes:
  dev_dbdata:
    driver: local