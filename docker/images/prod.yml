version: "2"
services:

# ======================================================================================================================
  frontend:
    container_name: frontend
    image: absortium/frontend:latest
    entrypoint: ["npm"]
    command: ["run", "start:prod"]

# ======================================================================================================================
  # Base  backend service which include the parameteres that backend and celery worker share
  backend:
    image: absortium/backend:latest
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    # Backend DJANGO migration service
    entrypoint: ["python", "-u", "manage.py"]
    command: ["--help"]

  # Backend DJANGO service
  m-backend:
    extends: backend
    container_name: m-backend
    environment:
      - ETH_NOTIFICATION_TOKEN=${ETH_NOTIFICATION_TOKEN}
      - BTC_NOTIFICATION_TOKEN=${BTC_NOTIFICATION_TOKEN}
      - AUTH0_SECRET_KEY=${AUTH0_SECRET_KEY}
      - AUTH0_API_KEY=${AUTH0_API_KEY}
      - WHOAMI=DJANGO
    entrypoint: ["gunicorn"]
    command: ["-b" , "0.0.0.0:3000", "--workers=5",  "wsgi"]

  # Celery worker
  w-backend:
    extends: backend
    container_name: w-backend
    environment:
      - COINBASE_API_KEY=${COINBASE_API_KEY}
      - COINBASE_API_SECRET=${COINBASE_API_SECRET}
      - ETHWALLET_API_KEY=${ETHWALLET_API_KEY}
      - ETHWALLET_API_SECRET=${ETHWALLET_API_SECRET}
      - WHOAMI=CELERY
    entrypoint: ["celery"]
    command: ["-A" , "absortium.celery.app", "worker", "-B", "--loglevel=info", "-c", "3"]

# ======================================================================================================================
  ethwallet:
    image: absortium/ethwallet:latest
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - WHOAMI=DJANGO
    entrypoint: ["python", "-u", "manage.py"]
    command: ["--help"]

  # Ethereum wallet backend DJANGO service
  m-ethwallet:
    extends: ethwallet
    container_name: m-ethwallet
    entrypoint: ["gunicorn"]
    command: ["-b" , "0.0.0.0:3000", "--workers=5",  "wsgi"]

  # Ethereum wallet celery worker
  w-ethwallet:
    extends: ethwallet
    container_name: w-ethwallet
    environment:
      - WHOAMI=CELERY
    entrypoint: ["celery"]
    command: ["-A" , "ethwallet.celery.app", "worker", "-B", "--loglevel=info", "-c", "3"]

  # Ethereum wallet DJANGO migration service
  manage-ethwallet:
    extends: ethwallet
    container_name: m-ethwallet
    environment:
      - WHOAMI=DJANGO
    links:
      - "postgres:docker.postgres"
      - "ethnode:docker.ethnode"
    entrypoint: ["python", "-u", "manage.py"]
    command: ["--help"]

# ======================================================================================================================
  router:
    container_name: router
    image: absortium/router:latest
    ports:
      - "8080:8080"

# ======================================================================================================================
  ethnode:
    container_name: ethnode
    image: absortium/ethnode:latest
    volumes:
      - "prod_ethtestnet:/opt/deluge/services/ethnode/"

# ======================================================================================================================
  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - "prod_dbdata:/var/lib/postgresql/data"

# ======================================================================================================================
  redis:
    container_name: redis
    image: redis

# ======================================================================================================================
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest

volumes:
  prod_dbdata:
    driver: local
  prod_ethtestnet:
    driver: local